"""
Django settings for urlslogs project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import environ


env = environ.Env()
environ.Env.read_env()


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECURITY WARNING: don't run with debug turned on in production!
SECRET_KEY = env.str('SECRET_KEY')
TOKEN = env.str('TOKEN')
DEBUG = env.bool('DEBUG', default=True)

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.contenttypes',
    'rest_framework',
    'corsheaders',
    'urlslogs.apps.cloudwatch',
]


ENDPOINT = {

    #'tabelao': 'http://host.docker.internal:8800'
    # ip atualizado em 19/10/2020
    'tabelao': 'http://tabel-loadb-c3aanhj0xdc5-fe25330cf7238223.elb.sa-east-1.amazonaws.com:8800'


}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [],
    'DEFAULT_PERMISSION_CLASSES': [],
    'UNAUTHENTICATED_USER': None,
}


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]


# todo: em desenvolvimento, liberar api, depois remover no final
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = [
     "http://127.0.0.1:4200",
     "http://localhost:4200"
]


ROOT_URLCONF = 'urlslogs.urls'
WSGI_APPLICATION = 'urlslogs.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/
LANGUAGE_CODE = 'en-us' # todo: mudar para portugues Brasil
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Configuração para usar o CLOUDWATCH LOG
from boto3.session import Session

CLOUDWATCH_AWS_ID = env.str('CLOUDWATCH_AWS_ID')
CLOUDWATCH_AWS_KEY = env.str('CLOUDWATCH_AWS_KEY')
AWS_DEFAULT_REGION = env.str('AWS_DEFAULT_REGION')

logger_boto3_session = Session(
    aws_access_key_id=CLOUDWATCH_AWS_ID,
    aws_secret_access_key=CLOUDWATCH_AWS_KEY,
    region_name=AWS_DEFAULT_REGION,
)
